// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rooms.API.Data;

#nullable disable

namespace Rooms.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("Rooms.API.Entities.Block", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FloorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GenderRule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("Rooms.API.Entities.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdministratorContact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FloorsCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Rooms.API.Entities.Floor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BlocksCount")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("Rooms.API.Entities.MaintenanceTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignedToId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ReporterById")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("MaintenanceTickets");
                });

            modelBuilder.Entity("Rooms.API.Entities.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MovedInAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MovedOutAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OccupiedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("Rooms.API.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BlockId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Purpose")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Rooms.API.Entities.Block", b =>
                {
                    b.HasOne("Rooms.API.Entities.Floor", "Floor")
                        .WithMany("Blocks")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("Rooms.API.Entities.Floor", b =>
                {
                    b.HasOne("Rooms.API.Entities.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Rooms.API.Entities.MaintenanceTicket", b =>
                {
                    b.HasOne("Rooms.API.Entities.Room", "Room")
                        .WithMany("MaintenanceTickets")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Rooms.API.Entities.Place", b =>
                {
                    b.HasOne("Rooms.API.Entities.Room", "Room")
                        .WithMany("Places")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Rooms.API.Entities.Room", b =>
                {
                    b.HasOne("Rooms.API.Entities.Block", "Block")
                        .WithMany("Rooms")
                        .HasForeignKey("BlockId");

                    b.Navigation("Block");
                });

            modelBuilder.Entity("Rooms.API.Entities.Block", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Rooms.API.Entities.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("Rooms.API.Entities.Floor", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("Rooms.API.Entities.Room", b =>
                {
                    b.Navigation("MaintenanceTickets");

                    b.Navigation("Places");
                });
#pragma warning restore 612, 618
        }
    }
}
