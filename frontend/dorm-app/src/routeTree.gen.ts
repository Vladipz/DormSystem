/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainLayoutImport } from './routes/_mainLayout'
import { Route as AuthLayoutImport } from './routes/_authLayout'
import { Route as MainLayoutIndexImport } from './routes/_mainLayout/index'
import { Route as AuthLayoutRegisterImport } from './routes/_authLayout/register'
import { Route as AuthLayoutLoginImport } from './routes/_authLayout/login'
import { Route as MainLayoutEventsIndexImport } from './routes/_mainLayout/events/index'
import { Route as MainLayoutEventsEventIdImport } from './routes/_mainLayout/events/$eventId'

// Create/Update Routes

const MainLayoutRoute = MainLayoutImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutIndexRoute = MainLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any)

const AuthLayoutRegisterRoute = AuthLayoutRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const MainLayoutEventsIndexRoute = MainLayoutEventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutEventsEventIdRoute = MainLayoutEventsEventIdImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => MainLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/login': {
      id: '/_authLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/register': {
      id: '/_authLayout/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthLayoutRegisterImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_mainLayout/': {
      id: '/_mainLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/events/$eventId': {
      id: '/_mainLayout/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof MainLayoutEventsEventIdImport
      parentRoute: typeof MainLayoutImport
    }
    '/_mainLayout/events/': {
      id: '/_mainLayout/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof MainLayoutEventsIndexImport
      parentRoute: typeof MainLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
  AuthLayoutRegisterRoute: typeof AuthLayoutRegisterRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
  AuthLayoutRegisterRoute: AuthLayoutRegisterRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface MainLayoutRouteChildren {
  MainLayoutIndexRoute: typeof MainLayoutIndexRoute
  MainLayoutEventsEventIdRoute: typeof MainLayoutEventsEventIdRoute
  MainLayoutEventsIndexRoute: typeof MainLayoutEventsIndexRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutIndexRoute: MainLayoutIndexRoute,
  MainLayoutEventsEventIdRoute: MainLayoutEventsEventIdRoute,
  MainLayoutEventsIndexRoute: MainLayoutEventsIndexRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MainLayoutRouteWithChildren
  '/login': typeof AuthLayoutLoginRoute
  '/register': typeof AuthLayoutRegisterRoute
  '/': typeof MainLayoutIndexRoute
  '/events/$eventId': typeof MainLayoutEventsEventIdRoute
  '/events': typeof MainLayoutEventsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteWithChildren
  '/login': typeof AuthLayoutLoginRoute
  '/register': typeof AuthLayoutRegisterRoute
  '/': typeof MainLayoutIndexRoute
  '/events/$eventId': typeof MainLayoutEventsEventIdRoute
  '/events': typeof MainLayoutEventsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/_authLayout/login': typeof AuthLayoutLoginRoute
  '/_authLayout/register': typeof AuthLayoutRegisterRoute
  '/_mainLayout/': typeof MainLayoutIndexRoute
  '/_mainLayout/events/$eventId': typeof MainLayoutEventsEventIdRoute
  '/_mainLayout/events/': typeof MainLayoutEventsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/register' | '/' | '/events/$eventId' | '/events'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/register' | '/' | '/events/$eventId' | '/events'
  id:
    | '__root__'
    | '/_authLayout'
    | '/_mainLayout'
    | '/_authLayout/login'
    | '/_authLayout/register'
    | '/_mainLayout/'
    | '/_mainLayout/events/$eventId'
    | '/_mainLayout/events/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  MainLayoutRoute: MainLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authLayout",
        "/_mainLayout"
      ]
    },
    "/_authLayout": {
      "filePath": "_authLayout.tsx",
      "children": [
        "/_authLayout/login",
        "/_authLayout/register"
      ]
    },
    "/_mainLayout": {
      "filePath": "_mainLayout.tsx",
      "children": [
        "/_mainLayout/",
        "/_mainLayout/events/$eventId",
        "/_mainLayout/events/"
      ]
    },
    "/_authLayout/login": {
      "filePath": "_authLayout/login.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/register": {
      "filePath": "_authLayout/register.tsx",
      "parent": "/_authLayout"
    },
    "/_mainLayout/": {
      "filePath": "_mainLayout/index.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/events/$eventId": {
      "filePath": "_mainLayout/events/$eventId.tsx",
      "parent": "/_mainLayout"
    },
    "/_mainLayout/events/": {
      "filePath": "_mainLayout/events/index.tsx",
      "parent": "/_mainLayout"
    }
  }
}
ROUTE_MANIFEST_END */
